#ifndef ST_IN
#define ST_IN

#include <iostream>
#include <string>
#include <vector>
#include "Object/Display_Module_CLass/Class_Render.h"

using namespace std;

// a Render object(or Sub class of Render) R_Main must be created before this headfile is called
// Render R_Main;
class Start_Interface
{
private:
    bool STI_Testmod = 0;

private:
    vector <int> STI_highlight_id{0,0};
    vector <int> STI_Popup_highlight_id{0,0,0};
    int STI_selectable=1;

protected:
    vector<int> STI_st_xy{0, 0};
    vector<int> STI_Size{80, 40};
    void STI_Output();
    void Title();
    void New_Game();
    void Load_Save();

protected:
    string STI_Layer_name = "Map";
};

void Start_Interface::Title(){
    vector <string> temp_string{
        "╔","═","═","═","═","═","═","═","╗","0","0","0","0","╔","═","╗","0","0","0","╔","═","╗","0","0","0","0","╔","═","═","═","═","═","═","═","╗","0","0","0","0","╔","═","╗","0","0","0","╔","═","╗","0","0","0","0","0","╔","═","═","═","═","═","╗","0","0","0","0","0","╔","═","╗","0","0","0","╔","═","╗","0","0","0","0","╔","═","═","═","═","═","═","═","╗","0","0","0","0","╔","═","═","═","═","═","═","═","╗","0",
        "║","0","╔","═","═","═","═","═","╝","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╔","═","═","═","╗","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","0","╚","═","╗","0","╔","═","╝","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╔","═","═","═","╗","0","║","0","0","0","0","║","0","╔","═","═","═","╗","0","║","0",
        "║","0","║","0","0","0","0","0","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0",
        "║","0","║","0","0","0","0","0","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╚","╗","0","╔","╝","0","║","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","║","0","╚","╗","0","╔","╝","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0",
        "║","0","╚","═","═","═","═","═","╗","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╚","═","═","═","╝","0","║","0","0","0","0","╚","╗","0","║","0","║","0","╔","╝","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","╚","╗","0","║","0","║","0","╔","╝","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╚","═","═","═","╝","0","║","0",
        "╚","═","═","═","═","═","╗","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╔","═","═","╗","0","╔","╝","0","0","0","0","0","║","0","║","0","║","0","║","0","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","0","║","0","║","0","║","0","║","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","╔","═","═","╗","0","╔","╝","0",
        "0","0","0","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0","0","0","0","0","║","0","╚","═","╝","0","║","0","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","0","║","0","╚","═","╝","0","║","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0",
        "0","0","0","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0","0","0","0","0","╚","╗","0","0","0","╔","╝","0","0","0","0","0","0","0","0","║","0","║","0","0","0","0","0","0","0","0","╚","╗","0","0","0","╔","╝","0","0","0","0","0","║","0","║","0","0","0","║","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0",
        "╔","═","═","═","═","═","╝","0","║","0","0","0","0","║","0","╚","═","═","═","╝","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0","0","0","0","0","0","║","0","0","0","║","0","0","0","0","0","0","0","╔","═","╝","0","╚","═","╗","0","0","0","0","0","0","0","║","0","0","0","║","0","0","0","0","0","0","║","0","╚","═","═","═","╝","0","║","0","0","0","0","║","0","║","0","0","║","0","║","0","0",
        "╚","═","═","═","═","═","═","═","╝","0","0","0","0","╚","═","═","═","═","═","═","═","╝","0","0","0","0","╚","═","╝","0","0","╚","═","╝","0","0","0","0","0","0","0","╚","═","═","═","╝","0","0","0","0","0","0","0","╚","═","═","═","═","═","╝","0","0","0","0","0","0","0","╚","═","═","═","╝","0","0","0","0","0","0","╚","═","═","═","═","═","═","═","╝","0","0","0","0","╚","═","╝","0","0","╚","═","╝","0","0",
    };
    int X_size = 51;
    vector <Pixel> Output_Map;
    Pixel temp_P;
    temp_P.set_colour(1 + (rand() % 8));
    for (int id = 0;id<temp_string.size();id++){
        if (temp_string[id]=="0"){
            temp_P.text="/s";
        }
        else{
            temp_P.text=temp_string[id];
        }
        Output_Map.push_back(temp_P);
    }
    vector <int> st_xy{(STI_st_xy[0]+(STI_Size[0]/2)-(X_size/2)),3};
    vector <int> en_xy{st_xy[0]+X_size-1,st_xy[1]+9};
    R_Main.Add_Textbox("", 0, 0, STI_Layer_name, Output_Map, st_xy, en_xy, 0);
}

void Start_Interface::New_Game(){
    Pixel temp;
    string temp_string;
    if (Save_no==-1){
        temp_string =string("000000000000000")+"0000New0Game000"+"000000000000000"+"000000000000000";
    }
    else if (Save_no==0){
        if (Save_Existence[Save_no]){
            temp_string =string("000000000000000")+"000Continue:000"+"000Auto0Save000"+"000000000000000";
            temp.colour=Green;
        }
        else{
            temp_string =string("000000000000000")+"0000New0Game000"+"000000000000000"+"000000000000000";
        }
    }
    else {
        string Text=to_string(Save_no);
        if (Save_Existence[Save_no]){
            temp_string =string("000000000000000")+"000Continue:000"+"000Save0No0"+Text+"000"+"000000000000000";
            temp.colour=Green;
        }
        else{
            temp_string =string("000000000000000")+"0000New0Game000"+"000000000000000"+"000000000000000";
        }
    }
    vector <Pixel> Output_Map;
    for (int id = 0; id < temp_string.size(); id++)
    {
        if (temp_string[id] == '0')
        {
            temp.text = "/s";
        }
        else
        {
            temp.text = temp_string[id];
        }
        Output_Map.push_back(temp);
    }
    vector <int> st_xy{STI_st_xy[0]+((STI_Size[0]-16)/3),24};
    vector <int> en_xy{st_xy[0]+7,st_xy[1]+3};
    STI_highlight_id[0] = R_Main.Add_Textbox("New_Game", STI_selectable, STI_highlight_id[0],STI_Layer_name, Output_Map, st_xy, en_xy, 0);
}

void Start_Interface::Load_Save(){
    string temp_string=string("000000000000000")+"000Load0Save000"+"000000000000000"+"000000000000000";
    vector <Pixel> Output_Map;
    Pixel temp;
    for (int id = 0; id < temp_string.size(); id++)
    {
        if (temp_string[id] == '0')
        {
            temp.text = "/s";
        }
        else
        {
            temp.text = temp_string[id];
        }
        Output_Map.push_back(temp);
    }
    vector <int> st_xy{STI_st_xy[0]+(2*((STI_Size[0]-16)/3))+8,24};
    vector <int> en_xy{st_xy[0]+7,st_xy[1]+3};
    STI_highlight_id[1] = R_Main.Add_Textbox("Load_Save", STI_selectable, STI_highlight_id[1],STI_Layer_name, Output_Map, st_xy, en_xy, 0);
}

void Start_Interface::STI_Output(){
    Title();
    New_Game();
    Load_Save();
}

#endif